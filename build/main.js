(()=>{"use strict";function e(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function t(t){e(1,arguments);var a=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===a?new Date(t.getTime()):"number"==typeof t||"[object Number]"===a?new Date(t):("string"!=typeof t&&"[object String]"!==a||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function a(a,n){e(2,arguments);var r=t(a),o=t(n),i=r.getTime()-o.getTime();return i<0?-1:i>0?1:i}function n(a,n){e(2,arguments);var r=t(a),o=t(n),i=r.getFullYear()-o.getFullYear(),s=r.getMonth()-o.getMonth();return 12*i+s}function r(r,o){e(2,arguments);var i=t(r),s=t(o),u=a(i,s),d=Math.abs(n(i,s));i.setMonth(i.getMonth()-u*d);var m=a(i,s)===-u,h=u*(d-m);return 0===h?0:h}function o(a,n){e(2,arguments);var r=t(a),o=t(n);return r.getTime()-o.getTime()}function i(t,a){e(2,arguments);var n=o(t,a)/1e3;return n>0?Math.floor(n):Math.ceil(n)}var s={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function u(e){return function(t){var a=t||{},n=a.width?String(a.width):e.defaultWidth;return e.formats[n]||e.formats[e.defaultWidth]}}var d,m={date:u({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:u({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:u({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},h={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function l(e){return function(t,a){var n,r=a||{};if("formatting"===(r.context?String(r.context):"standalone")&&e.formattingValues){var o=e.defaultFormattingWidth||e.defaultWidth,i=r.width?String(r.width):o;n=e.formattingValues[i]||e.formattingValues[o]}else{var s=e.defaultWidth,u=r.width?String(r.width):e.defaultWidth;n=e.values[u]||e.values[s]}return n[e.argumentCallback?e.argumentCallback(t):t]}}function c(e){return function(t,a){var n=String(t),r=a||{},o=r.width,i=o&&e.matchPatterns[o]||e.matchPatterns[e.defaultMatchWidth],s=n.match(i);if(!s)return null;var u,d=s[0],m=o&&e.parsePatterns[o]||e.parsePatterns[e.defaultParseWidth];return u="[object Array]"===Object.prototype.toString.call(m)?function(e,t){for(var a=0;a<e.length;a++)if(e[a].test(d))return a}(m):function(e,t){for(var a in e)if(e.hasOwnProperty(a)&&e[a].test(d))return a}(m),u=e.valueCallback?e.valueCallback(u):u,{value:u=r.valueCallback?r.valueCallback(u):u,rest:n.slice(d.length)}}}const f={code:"en-US",formatDistance:function(e,t,a){var n;return a=a||{},n="string"==typeof s[e]?s[e]:1===t?s[e].one:s[e].other.replace("{{count}}",t),a.addSuffix?a.comparison>0?"in "+n:n+" ago":n},formatLong:m,formatRelative:function(e,t,a,n){return h[e]},localize:{ordinalNumber:function(e,t){var a=Number(e),n=a%100;if(n>20||n<10)switch(n%10){case 1:return a+"st";case 2:return a+"nd";case 3:return a+"rd"}return a+"th"},era:l({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:l({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(e){return Number(e)-1}}),month:l({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:l({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:l({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(d={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(e){return parseInt(e,10)}},function(e,t){var a=String(e),n=t||{},r=a.match(d.matchPattern);if(!r)return null;var o=r[0],i=a.match(d.parsePattern);if(!i)return null;var s=d.valueCallback?d.valueCallback(i[0]):i[0];return{value:s=n.valueCallback?n.valueCallback(s):s,rest:a.slice(o.length)}}),era:c({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:c({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:c({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:c({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:c({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};function g(e){return function(e,t){if(null==e)throw new TypeError("assign requires that input parameter not be null or undefined");for(var a in t=t||{})t.hasOwnProperty(a)&&(e[a]=t[a]);return e}({},e)}var v=6e4;function y(e){return e.getTime()%v}function b(e){var t=new Date(e.getTime()),a=Math.ceil(t.getTimezoneOffset());t.setSeconds(0,0);var n=a>0?(v+y(t))%v:y(t);return a*v+n}var p=1440,w=43200;function M(n,o,s){e(2,arguments);var u=s||{},d=u.locale||f;if(!d.formatDistance)throw new RangeError("locale must contain formatDistance property");var m=a(n,o);if(isNaN(m))throw new RangeError("Invalid time value");var h,l,c=g(u);c.addSuffix=Boolean(u.addSuffix),c.comparison=m,m>0?(h=t(o),l=t(n)):(h=t(n),l=t(o));var v,y=i(l,h),M=(b(l)-b(h))/1e3,S=Math.round((y-M)/60);if(S<2)return u.includeSeconds?y<5?d.formatDistance("lessThanXSeconds",5,c):y<10?d.formatDistance("lessThanXSeconds",10,c):y<20?d.formatDistance("lessThanXSeconds",20,c):y<40?d.formatDistance("halfAMinute",null,c):y<60?d.formatDistance("lessThanXMinutes",1,c):d.formatDistance("xMinutes",1,c):0===S?d.formatDistance("lessThanXMinutes",1,c):d.formatDistance("xMinutes",S,c);if(S<45)return d.formatDistance("xMinutes",S,c);if(S<90)return d.formatDistance("aboutXHours",1,c);if(S<p){var D=Math.round(S/60);return d.formatDistance("aboutXHours",D,c)}if(S<2520)return d.formatDistance("xDays",1,c);if(S<w){var W=Math.round(S/p);return d.formatDistance("xDays",W,c)}if(S<86400)return v=Math.round(S/w),d.formatDistance("aboutXMonths",v,c);if((v=r(l,h))<12){var P=Math.round(S/w);return d.formatDistance("xMonths",P,c)}var T=v%12,k=Math.floor(v/12);return T<3?d.formatDistance("aboutXYears",k,c):T<9?d.formatDistance("overXYears",k,c):d.formatDistance("almostXYears",k+1,c)}let S=document.querySelector(".chat-rooms");const D=document.querySelector(".new-chat"),W=document.querySelector(".new-name"),P=document.querySelector(".chat-window .chat-list"),T=document.querySelector(".update_name");let k="general";const C=localStorage.username?localStorage.username:"user";S.addEventListener("click",(e=>{e.target.id&&(k=e.target.id,x.wipe(),j.updateRoom(k),j.getChats((e=>x.display(e))))})),W.addEventListener("submit",(e=>{e.preventDefault(),userName=W.name.value.trim(),j.updateName(userName),T.textContent=`Your name has been updated to ${userName}`,setTimeout((()=>{T.textContent=null}),3e3)})),D.addEventListener("submit",(e=>{D.message.value&&(e.preventDefault(),j.addChat(D.message.value))}));const x=new class{constructor(e){this.list=e}wipe(){this.list.innerHTML=""}display(t){const a=function(t,a){return e(1,arguments),M(t,Date.now(),a)}(t.created_at.toDate(),{addSuffix:!0}),n=`\n        <li class="list-group-item">\n            <span class="username bold">${t.username}:</span>\n            <span class="message">${t.message}</span>\n            <div class="time"><small>${a}</small></div>\n\t\t\t\t</li>\n\t\t\t\t`;this.list.innerHTML+=n,document.querySelector(".chat-list")&&document.querySelector(".chat-list").lastElementChild.scrollIntoView()}}(P),j=new class{constructor(e,t){this.room=e,this.username=t,this.chats=db.collection("chats"),this.unsub}async addChat(e){const t=new Date,a={created_at:firebase.firestore.Timestamp.fromDate(t),message:e,username:this.username,room:this.room};return await this.chats.add(a)}async getChats(e){this.unsub=await this.chats.where("room","==",this.room).orderBy("created_at").onSnapshot((t=>{t.docChanges().forEach((t=>{"added"===t.type?e(t.doc.data()):t.type}))}))}updateName(e){this.username=e,localStorage.setItem("username",e)}updateRoom(e){this.room=e,this.unsub()}}("general",C);j.getChats((e=>x.display(e)))})();